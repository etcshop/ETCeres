{% import "Ceres::PageDesign.Macros.IncludeComponents" as Loader %}
{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}
{% import "Ceres::PageDesign.Macros.Translations" as Translations %}
{{ component( "Ceres::PageDesign.Components.Notifications" ) }}
{{ component( "Ceres::Customer.Components.Login" ) }}
{{ component( "ETCeres::Customer.Components.RegistrationETC" ) }}
{{ component( "Ceres::PageDesign.Components.Popper" ) }}
{{ component( "Ceres::Containers.Components.ContainerItemList" ) }}
{{ component( "Ceres::Containers.Components.LastSeenItemList" ) }}
{{ component( "Ceres::Customer.Components.ForgotPassword" ) }}
{{ component( "Ceres::Customer.Components.Contact.AcceptPrivacyPolicyCheck") }}

{% if isShopBuilder %}
    {% include "Ceres::Widgets.WidgetComponents" %}
{% endif %}

{% set currencyFormat = config("Ceres.currency.format") %}
{% set defaultLanguage = services.webstoreConfig.getDefaultLanguage() %}
{% set pid = services.webstoreConfig.getPlentyId() %}

{% set canonicalUrl = services.url.getCanonicalURL() %}
{% set currTpl = services.template.getCurrentTemplate() %}
{% set buttonSize = 0 %}


{% if request.get('openBasketPreview') == 1 %}
    {% set openBasketClass = "open-" ~ ceresConfig.basket.previewType %}
{% endif %}

{% spaceless %}
<!DOCTYPE html>

<html lang="{{ lang }}" data-framework="vue" prefix="og: http://ogp.me/ns#">

<head>
    {{ get_consent_scripts(ceresConfig.global.blockCookies) }}
    {% include getPartial('head') %}

    {% block PartialHead %}
    {% endblock %}

    {% for styleTemplate in get_additional_styles() %}
        {% include styleTemplate.path ignore missing with styleTemplate.params %}
    {% endfor %}

    {% if assetName == 'ceres-checkout' %}
        {{ LayoutContainer.show("Ceres::Checkout.Styles") }}
    {% endif %}
    {% if isItem %}
        {{ LayoutContainer.show("Ceres::SingleItem.Styles") }}
    {% endif %}

    {% if ("/amazon-checkout" in request.getRequestUri()) or ("/amazon-login-processing" in request.getRequestUri()) or ("/amazon" in request.getRequestUri()) %}
      <title>Amazon Checkout | {{ config("Ceres.header.company_name") }}</title>
    {% endif %}

</head>

<body>
  {{ LayoutContainer.show("Ceres::PageDesign.AfterOpeningBodyTag") }}

  <script>
      if('ontouchstart' in document.documentElement)
      {
          document.body.classList.add("touch");
      }
      else
      {
          document.body.classList.add("no-touch");
      }
  </script>

  <div id="vue-app">
    <div style="display: none; height: 100px; width: 100px; position: absolute; background-color: #F00; z-index: 111111111111111;">
      {% set ETCUri = request.getRequestUri() %}
      Request-URI (Funktion): {{ request.getRequestUri() }}
      Request-URI (Variable): {{ ETCUri }}

      {% if ("/en/confirmation" in ETCUri) or ("/fr/confirmation" in ETCUri) %}
        <script>window.location.href = "{{ ETCUri }}";</script>
      {% endif %}

      {{ canonicalUrl }}
      Aktuelles Template: {{ currTpl }}<br>
      <br>
      CookieState = {{ cookieState }}
      <br>
      asset = {{ assetName }}
      <br>
    </div>

    <div class="wrapper wrapper-top testdev1228">
        <!-- messages -->
        <notifications template="#vue-notifications" :initial-notifications="{{ notifications | json_encode() }}"></notifications>
            <!-- LOGIN MODAL -->
            <div id="login-modal-wrapper">
                <div class="modal fade login-modal" id="login" tabindex="-1" role="dialog">
                    <div class="modal-dialog">
                        <header class="login-modal-header border-bottom p-3">
                          <span class="h3 mb-0">Hallo, Anmelden</span>
                          <button type="button" aria-label="Close" class="close">
                            <span aria-hidden="true">×</span>
                          </button>
                        </header>
                        <div class="modal-content">
                            <div class="modal-title h3">Sie sind bereits Kunde?</div>
                            <login template="#vue-login" modal-element="login-modal-wrapper"></login>
                            <div class="modal-footer">
                              <div class="modal-title h3">Noch kein Kunde?</div>
                              <hr>
                              <div class="modal-footer-text">
                                Du erhälst in deinem persönlichen "Mein Konto"-Bereich jederzeit Zugriff auf deine Bestellungen sowie deine Kundendaten.<br>
                                <br>
                                Als Gast bestellst du ohne Registrierung. Bei weiteren Bestellungen musst du deine Daten erneut eingeben.<br>
                                <br>
                                <button class="btn btn-primary btn-medium">
                                  Registrieren
                                  <i aria-hidden="true" class="fa fa-user"></i>
                                </button>
                              </div>
                        </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- ./LOGIN MODAL -->
    </div>

    <div class="wrapper wrapper-left">
        <!-- filters -->
    </div>

    <div class="wrapper wrapper-main {% if ceresConfig.header.fixNavBarPos %}isSticky{% endif %}">
        {% include "ETCeres::PageDesign.Partials.Header.Header" %}

        <div class="content">
          <div class="container_centered">

            <!-- breadcrumb -->
            {% if not services.template.isHome() and not services.template.isMyAccount() and not services.template.isCheckout() and not showMyAccountSubMenu and 'tpl.basket' not in currTpl and 'tpl.page-not-found' not in currTpl %}
                {% include "Ceres::PageDesign.Partials.Header.Breadcrumb" %}
            {% endif %}

            {% if services.template.isHome() %}
              {% set mainContentCentered = ' class="container_centered"' %}
          {% else %}
              {% set mainContentCentered = '' %}
            {% endif %}

            {% if category.linklist == "Y" %}
                {% set initialCategory = { id: category.id } %}
            {% else %}
                {% set initialCategory = category %}
            {% endif %}
          </div>
        <div{% if not services.template.isHome() and not services.template.isCurrentTemplate("tpl.item") %} class="container_centered" {% endif %}>


            {% block PageBody %}
                {% for content in container("Ceres::Homepage") if content.plugin == "Plenty" %}
                  {{ content.result | raw }}
                {% endfor %}


                {% if config("Ceres.homepage.showShopBuilderContent") == "true" or request.get('isContentBuilder') == 1 %}

                    {% for content in container("Ceres::Homepage") if content.plugin == "Plenty" %}
                        {{ content.result | raw }}
                    {% endfor %}

                {% endif %}

            {% endblock %}

          </div>
        </div>

        {% include getPartial('footer') %}

        {% block PartialFooter %}
        {% endblock %}

        <input type="hidden" name="CookieBanner_StateInputPD" id="CookieBanner_StateInputPD">
    </div>

    {% if basket is not defined %}
        {% set basket = services.basket.getBasketForTemplate() %}
    {% endif %}

    {% if ceresConfig.basket.previewType == "right" %}
        <div class="wrapper wrapper-right test1346">
            <basket-preview :show-net-prices={{ showNetPrices | json_encode }}></basket-preview>
        </div>
    {% endif %}

    <div class="wrapper wrapper-bottom test1358">
      <!-- REGISTRATION MODAL -->
      <div id="simple-registration-modal-wrapper">
        <div class="modal fade" id="registration" tabindex="-1" role="dialog">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <div class="modal-title h3">
                  {{ trans("Ceres::Template.regCreateAccount") }}

                  <popper v-cloak class="pull-right m-r-1">
                    <button slot="handle" class="btn btn-icon btn-secondary btn-sm">
                      <i class="fa fa-info"></i>
                    </button>
                    <div slot="title">
                      {{ trans("Ceres::Template.regContactInformations") }}
                    </div>
                    <ul slot="content" class='p-l-1'>
                      <li class='m-b-1'>{{ trans('Ceres::Template.regContactInfoText1') }}</li>
                      <li class='m-b-1'>{{ trans('Ceres::Template.regContactInfoText2') }}</li>
                      <li class='m-b-1'>{{ trans('Ceres::Template.regContactInfoText3') }}</li>
                      <li>{{ trans('Ceres::Template.regContactInfoText4') }}</li>
                    </ul>
                  </popper>
                </div>
              </div>
              <registration template="#vue-registrationETC" :is-simple-registration="true" modal-element="simple-registration-modal-wrapper"></registration>
            </div>
          </div>
        </div>
      </div>
      <!-- ./REGISTRATION MODAL -->

      <!-- PASSWORD RESET MODAL -->
      <forgot-password-modal></forgot-password-modal>
      <!-- ./PASSWORD RESET MODAL -->


      <!-- SHIPPINGCOSTS MODAL -->
      <div id="shippingscosts-modal-wrapper">
        <div class="modal fade" id="shippingscosts" tabindex="-1" role="dialog">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <div class="modal-title h3">{{ trans('Ceres::Template.shippingInfoCosts') }}</div>
              </div>
              <div class="modal-body">
                {% include category_template(ceresConfig.global.shippingCostsCategoryId, lang, webstoreConfig.webstoreId) ignore missing %}
              </div>
            </div>
          </div>
        </div>
      </div>
      <!-- ./SHIPPINGCOSTS MODAL -->
    </div>
</div>

<!-- Extend the existing style with a template -->
{{ LayoutContainer.show("Ceres::Template.Style") }}

{{ get_shop_builder_styles() }}


<script>

    App = {
        config: {{ ceresConfig | json_encode | raw }},
        urls: {{ urls | json_encode | raw }},
        activeCurrency: "{{ currencyData[currencyFormat] }}",
        currencyPattern: {{  services.checkout.getCurrencyPattern() | json_encode | raw }},
        isCategoryView: {% if services.template.isCategory() == "1" %}true{% else %}false{% endif %},
        isCheckoutView : {% if services.template.isCheckout() == "1" %}true{% else %}false{% endif %},
        isSearch: {% if services.template.isSearch() == "1" %}true{% else %}false{% endif %},
        isItemView: {% if services.template.getCurrentTemplate() == "tpl.item" %}true{% else %}false{% endif %},
        templateType: "{{ urls.templateType }}",
        templateEvent: "{{ templateEvent }}",
        language: "{{ lang }}",
        defaultLanguage: "{{ defaultLanguage }}",
        decimalSeparator: "{{ config("IO.format.separator_decimal") }}",
        urlTrailingSlash: {{ urls.appendTrailingSlash | json_encode }},
        propertyFileUrl: "{{ services.propertyFile.getPropertyFileUrl() }}",
        isShopBuilder: {{ isShopBuilder | default(false) | json_encode }},
        bundleSetting: {{ services.webstoreConfig.getWebstoreConfig().dontSplitItemBundle }},
        publicPath: "{{ plugin_path('Ceres') ~ '/js/dist/' }}",
        initialData: {
            shippingCountries: {{ services.country.getActiveCountriesList() | filterFields(["id", "currLangName", "isoCode2", "states.id", "states.name"]) | json_encode | raw }},
            shippingCountryId: {{ services.checkout.getShippingCountryId() | json_encode }}
        },
        features: {}
    };
</script>

{{ Loader.include_components() }}

{{ LayoutContainer.show("Ceres::Script.Loader") }}

{% if ("/amazon-checkout" in ETCUri) or ("/amazon-login-processing" in ETCUri) or ("/amazon" in ETCUri) %}
  <div style="display: none">Layoutcontainer Anfang</div>
  {{ LayoutContainer.show("ETCeres::Payment.Scripts") }}
  <div style="display: none">Layoutcontainer Ende</div>
{% endif %}

{{ Translations.add( "Ceres", "Template" ) }}

{% set defaultCSS = plugin_path("Ceres") ~ "/css/" ~ assetName ~ ".css?v=" ~ buildHash %}
{% set defaultSCSS = plugin_path("Ceres") ~ "/css/" ~ assetName ~ ".scss?v=" ~ buildHash %}

<link rel="preload" as="style" href="{{ defaultCSS }}">
{% if LayoutContainer.show("Ceres::Template.StyleOverwrite") | trim is empty %}
    <link rel="stylesheet" href="{{ defaultCSS }}"{% if isShopBuilder %} data-sass-root="{{ plugin_path('Ceres') }}" data-sass-original="{{ defaultSCSS }}"{% endif %}>
{% endif %}

<link href="https://fonts.googleapis.com/css2?family=Hind+Guntur:wght@300;400;500;600;700&family=Hind:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Hind:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<link href="https://www.strauss-net.eu/etc/etcshop.css" rel="stylesheet" type="text/css" />

{% if lang == "fr" %}
{% elseif lang == "en" %}
{% endif %}

    {% if assetName == 'ceres-checkout' %}
        {{ LayoutContainer.show("Ceres::Checkout.Styles") }}
    {% endif %}
    {% if assetName == 'ceres-item' %}
        {{ LayoutContainer.show("Ceres::SingleItem.Styles") }}
    {% endif %}

{{ get_json_data() }}

{% if ceresConfig.log.performanceLevel  == 'development' %}
    <script src="{{ plugin_path('Ceres') }}/js/dist/{{ assetName }}.js?v={{ buildHash }}"></script>
{% else %}
    <script src="{{ plugin_path('Ceres') }}/js/dist/{{ assetName }}.min.js?v={{ buildHash }}"></script>
{% endif %}
<script src="https://www.strauss-net.eu/etc/etc.js"></script>

{% for scriptTemplate in get_additional_scripts() %}
    {% include scriptTemplate.path ignore missing with scriptTemplate.params %}
{% endfor %}

{% if isShopBuilder %}
    {% include "Ceres::Widgets.ShopBuilderDataStore" %}
{% endif %}

{{ LayoutContainer.show("Ceres::Script.AfterScriptsLoaded") }}

{% if assetName == 'ceres-checkout' %}
    {{ LayoutContainer.show("Ceres::Checkout.AfterScriptsLoaded") }}
{% endif %}
{% if assetName == 'ceres-item' %}
    {{ LayoutContainer.show("Ceres::SingleItem.AfterScriptsLoaded") }}
{% endif %}

<script>
    window.__loadPluginChunk = function(source) {
        return source += "?v={{ buildHash }}";
    };
    window.vueEventHub = new Vue();
    if (App.config.log.checkSyntax)
    {
        var rootElement = document.getElementById("vue-app");
        rootElement.innerHTML = rootElement.innerHTML.replace(/(?:^|\s)(?::|v-bind:)\S+=(?:""|'')/g, "");
        window.vueApp = new Vue({
            store: window.ceresStore
        });
        vueApp.$mount( rootElement.cloneNode(true) );
        if (vueApp.$el.id === "vue-app")
        {
            document.body.replaceChild( vueApp.$el, rootElement );
        }
    }
    else
    {
        // eslint-disable-next-line no-unused-vars
        window.vueApp = new Vue({
            el: "#vue-app",
            store: window.ceresStore
        });
    }
    {% if request.get("openBasketPreview") == 1 %}window.ceresStore.dispatch("loadComponent", "basket-preview"){% endif %}
</script>

{{ get_filtered_tags() }}

{{ get_shop_builder_scripts( "latest", ceresConfig.log.performanceLevel == 'live') }}

{% if not services.template.shouldBeCached() %}
    <input type="hidden" id="csrf-token" value="{{ csrf_token() }}">
{% endif %}

  {% if webstoreConfig.webstoreId == 4 %}
    <script src="https://www.etc-shop.de/layout/ETCeres/ml/js/ml.js"></script>
  {% else %}
    <script src="https://www.etc-shop.de/layout/ETCeres/js/etcbeta.js"></script>
  {% endif %}

{{ component( "ETCeres::Containers.Components.ContainerCrosssellingItemListETC" ) }}
{{ component( "ETCeres::Containers.Components.ContainerItemListDirectCross" ) }}
{{ component( "ETCeres::ItemList.Components.CrossSellingItemETC" ) }}
{{ component( "ETCeres::Containers.Components.ContainerStartBoxItemListETC" ) }}
{{ component( "ETCeres::ItemList.Components.StartBoxItemETC" ) }}
{{ component( "ETCeres::PageDesign.Components.CookieBannerETC" ) }}
{{ component( "ETCeres::PageDesign.Components.TrackingETC" ) }}
{{ component( "ETCeres::ItemList.Components.CategoryItemQuickView" ) }}

{% if not services.template.shouldBeCached() %}
    <input type="hidden" id="csrf-token" value="{{ csrf_token() }}">
{% endif %}

</body>
</html>

{% endspaceless %}
